swagger: '2.0'
info:
  version: 1.0.0
  title: Angelcam API
  description: tbd

host: api.angelcam.com
basePath: /v1

schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

tags:
  - name: user
    description: User
  - name: camera
    description: Camera
  - name: recording
    description: Recording

# DapperDox: use endpoint summary instead of HTTP method name
x-navigateMethodsByName: true

paths:
  /me/:
    get:
      summary: Current user info
      tags:
        - user
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserMeResponse'

  '/cameras/{camera_id}/recording/':
    get:
      summary: General recording information
      description: desc
      tags:
        - recording
      parameters:
        - $ref: '#/parameters/cameraId'
      responses:
        '200':
          description: Returns general recording information.
          schema:
            $ref: '#/definitions/RecordingResponse'
        '401':
          $ref: '#/responses/Error401Unauthorized'
        '404':
          $ref: '#/responses/Error404CraNotAdded'

  '/cameras/{camera_id}/recording/timeline/':
    get:
      summary: Retrieve timeline of records for given camera
      tags:
        - recording
      description: |
        Please keep in mind that maximum length of timeline is 1 day.
      parameters:
        - $ref: '#/parameters/cameraId'
        - name: start
          in: query
          type: string
          format: date-time
          required: true
          description: 'Start time of a timeline. Example: `2016-03-19T08:00:00Z`.'
        - name: end
          in: query
          type: string
          format: date-time
          required: true
          description: 'End time of a timeline. Example: `2016-03-19T14:00:00Z.`'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RecordingTimelineResponse'
        '400':
          description: |
            Invalid request. For example if:

            * start and/or end date are not ISO 8601 format
            * length (end - start) is more than 1 day
        '401':
          $ref: '#/responses/Error401Unauthorized'
        '404':
          $ref: '#/responses/Error404CraNotAdded'

  '/cameras/{camera_id}/recording/stream/':
    get:
      summary: Create and return recorded stream for a specified time
      tags:
        - recording
      parameters:
        - $ref: '#/parameters/cameraId'
        - name: start
          in: query
          type: string
          format: date-time
          required: true
          description: 'Start time of a stream. Example: `2016-03-19T08:00:00Z`.'
        - name: end
          in: query
          type: string
          format: date-time
          required: false
          description: >
            End time of a stream. If missing, stream will play till the very end of recorded footage.
            Example: `2016-03-19T14:00:00Z.`
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RecordingStreamResponse'
        '400':
          description: |
            Invalid request. For example if:

            * start and/or end date are not ISO 8601 format
            * start time is in the future
        '401':
          $ref: '#/responses/Error401Unauthorized'
        '404':
          $ref: '#/responses/Error404CraNotAdded'

  '/recording/stream/{streamer_name}/{streamer_id}/':
    get:
      summary: Retrieve recording stream info
      tags:
        - recording
      parameters:
        - name: streamer_name
          in: path
          type: string
          required: true
          description: Streamer server name.
        - name: streamer_id
          in: path
          type: string
          required: true
          description: Stream ID.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RecordingStreamInfoResponse'
        '400':
          description: |
            Invalid request. For example if:

            * start and/or end date are not ISO 8601 format
            * start time is in the future
        '401':
          $ref: '#/responses/Error401Unauthorized'
        '404':
          $ref: '#/responses/Error404CraNotAdded'

definitions:
  UserMeResponse:
    type: object
    title: User object
    properties:
      id:
        type: integer
        minimum: 0
        description: User ID.
        example: 2929
      first_name:
        type: string
        description: User's first or given name.
        example: John
      last_name:
        type: string
        description: User's last or family name.
        example: Appleseed
      email:
        type: string
        format: email
        description: User's email.
        example: john@apple.com
      phone:
        type: string
        description: User's phone.
        example: +123 558 951 14
    required:
      - id
      - email

  RecordingResponse:
    type: object
    title: Recording information
    required:
      - status
      - retention
    properties:
      status:
        type: string
        enum:
          - READY
          - CONNECTING
          - RECORDING
          - STOPPING
          - ERROR
        description: |
            Recording status values have the following meaning:

            * `READY` - Not recording (recording is ready to be started)
            * `CONNECTING` - Recorder is trying to connect to the stream (this usually indicates camera connectivity problems; the recorder keeps trying to connect).
            * `RECORDING` - Recorder is connected to the stream and records are being created
            * `STOPPING` - Recording is stopping
            * `ERROR` - Error occurred when recording (this indicates a possible issue with Angelcam infrastructure)
      retention:
        type: string
        description: >
            Retention period in ISO 8601 duration format tells how long in past we store the footage. Example:
            P7D means 7 days.
    example:
      status: RECORDING
      retention: P7D

  RecordingTimelineResponse:
    type: object
    title: Recording timeline object
    properties:
      start:
        type: string
        format: date-time
        description: >
          Start time of timeline (the value you entered in the query parameter).
          Example: `2017-01-01T00:00:00Z`.
      end:
        type: string
        format: date-time
        description: >
          End time of timeline (the value you entered in the query parameter).
          Example: `2017-01-01T00:00:00Z`.
      segments:
        type: array
        description: Array of recording segments.
        items:
          $ref: '#/definitions/Segment'

  Segment:
    type: object
    title: Segment object
    properties:
      start:
        type: string
        format: date-time
        description: 'Start of record segment. Example: `2017-01-01T00:00:00Z`.'
      end:
        type: string
        format: date-time
        description: 'End of record segment. Example: `2017-01-01T00:00:00Z`.'

  RecordingStreamResponse:
    type: object
    title: Recording stream object
    properties:
      url:
        type: string
        description: URL of a stream.
        example: >
          https://rec-streamer-eu-central-1.test.angelcam.com/streams/cefa6471a38f469585b46675fc992614/playlist.m3u8
      format:
        type: string
        enum:
          - hls
          - fmp4
          - mjpeg
        description: Stream format.
        example: hls
      stream_info:
        type: string
        description: URL of a recorded stream info endpoint.
        example: 'https://api.test.angelcam.com/v1/recording/stream/rec-streamer-eu-central-1/cefa6471a38f469585b46675fc992614/'

  RecordingStreamInfoResponse:
    type: object
    title: Recording stream information
    properties:
      current_time:
        type: string
        format: date-time
        description: Current time in a stream.
        example: '2017-01-01T00:00:00Z'

  ErrorGeneric:
    type: object
    title: Error object
    properties:
      title:
        type: string
      detail:
        type: string
      status:
        type: integer

  Error404NotFound:
    allOf:
      - $ref: '#/definitions/ErrorGeneric'
    title: Error 404 Not Found
    example:
      title: not_found
      detail: Not Found
      status: 404

  Error401Unauthorized:
    allOf:
      - $ref: '#/definitions/ErrorGeneric'
    title: Error 401 Unauthorized
    example:
      title: not_authenticated
      detail: Authentication credentials were not provided
      status: 401

parameters:
  cameraId:
    name: camera_id
    in: path
    type: integer
    minimum: 1
    required: true
    description: Camera ID.

responses:
  Error404NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error404NotFound'

  Error404CraNotAdded:
    description: This camera doesn't have Cloud Recording Application (CRA).
    schema:
      $ref: '#/definitions/Error404NotFound'

  Error401Unauthorized:
    description: Missing or invalid authorization.
    schema:
      $ref: '#/definitions/Error401Unauthorized'
