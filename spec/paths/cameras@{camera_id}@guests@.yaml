get:
  operationId: my-cameras-guests
  summary: Retrieve camera guests list
  tags:
    - camera-guest
  parameters:
    - $ref: '#/components/parameters/cameraId'
    - name: limit
      in: query
      required: false
      description: 'Limit result set. Example: `1`.'
      schema:
        type: integer
        minimum: 1
    - name: offset
      in: query
      required: false
      description: 'Return results starting at `offset`. Example: `10`.'
      schema:
        type: integer
        minimum: 1
  security:
    - OAuth2:
        - camera_guest_access
    - PersonalAccessToken: []
  responses:
    '200':
      description: Returns camera guests list.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CameraGuestListResponse'
    '401':
      $ref: '#/components/responses/Error401Unauthorized'
    '403':
      $ref: '#/components/responses/Error403PermissionDenied'
    '404':
      $ref: '#/components/responses/Error404NotFound'

post:
  operationId: my-cameras-guest-create
  summary: Create camera guest
  tags:
    - camera-guest
  parameters:
    - $ref: '#/components/parameters/cameraId'
  requestBody:
    content:
      application/json:
        schema:
          type: object
          title: guest
          required:
            - email
          properties:
            email:
              type: string
              format: email
            permissions:
              $ref: '#/components/schemas/CameraGuestPermissionObject'
  security:
    - OAuth2:
        - camera_guest_manage
    - PersonalAccessToken: []
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CameraGuestObject'
    '401':
      $ref: '#/components/responses/Error401Unauthorized'
    '403':
      $ref: '#/components/responses/Error403PermissionDenied'
    '404':
      $ref: '#/components/responses/Error404NotFound'

