get:
  operationId: my-cameras-guests
  summary: Retrieve camera guests list
  tags:
    - camera-guest
  parameters:
    - $ref: '#/parameters/cameraId'
    - name: limit
      in: query
      type: integer
      minimum: 1
      required: false
      description: 'Limit result set. Example: `1`.'
    - name: offset
      in: query
      type: integer
      minimum: 1
      required: false
      description: 'Return results starting at `offset`. Example: `10`.'
  security:
    - OAuth2-accessCode:
        - camera_guest_access
    - OAuth2-passwordGrant:
        - camera_guest_access
    - PersonalAccessToken: []
  responses:
    '200':
      description: Returns camera guests list.
      schema:
        $ref: '#/definitions/CameraGuestListResponse'
    '401':
      $ref: '#/responses/Error401Unauthorized'
    '403':
      $ref: '#/responses/Error403PermissionDenied'
    '404':
      $ref: '#/responses/Error404NotFound'
post:
  operationId: my-cameras-guest-create
  summary: Create camera guest
  tags:
    - camera-guest
  parameters:
    - $ref: '#/parameters/cameraId'
    - in: body
      name: guest
      schema:
        type: object
        title: guest
        required:
          - email
        properties:
          email:
            type: string
            format: email
          permissions:
            $ref: '#/definitions/CameraGuestPermissionObject'
  security:
    - OAuth2-accessCode:
        - camera_guest_manage
    - OAuth2-passwordGrant:
        - camera_guest_manage
    - PersonalAccessToken: []
  responses:
    '201':
      description: Created
      schema:
        $ref: '#/definitions/CameraGuestObject'
    '401':
      $ref: '#/responses/Error401Unauthorized'
    '403':
      $ref: '#/responses/Error403PermissionDenied'
    '404':
      $ref: '#/responses/Error404NotFound'
