get:
  operationId: my-cameras-list
  summary: Retrieve camera list
  tags:
    - camera
  parameters:
    - name: limit
      in: query
      required: false
      description: 'Limit result set. Example: `1`.'
      schema:
        type: integer
        minimum: 1
    - name: offset
      in: query
      required: false
      description: 'Return results starting at `offset`. Example: `10`.'
      schema:
        type: integer
        minimum: 1
    - name: refresh_rate
      in: query
      required: false
      description: >-
        Set a maximum number of keyframes sent in MJPEG stream per second. For
        example if you want to have MJPEG stream with keyframe sent every 10
        seconds, post value 0.1.
      schema:
        type: number
        format: float
        minimum: 0
    - name: max_width
      in: query
      required: false
      description: Maximum width of MJPEG stream and LIVE SNAPSHOT.
      schema:
        type: integer
        minimum: 1
    - name: max_height
      in: query
      required: false
      description: Maximum height of MJPEG stream and LIVE SNAPSHOT.
      schema:
        type: integer
        minimum: 1
    - name: has_guests
      in: query
      required: false
      description: >-
        1 for retrieving list of cameras that have been shared with someone, 0
        for retrieving list of cameras that have not been shared wth anyone.
        Leaving parameter empty will return list of all user cameras.
      schema:
        type: boolean
  security:
    - OAuth2:
        - camera_access
    - PersonalAccessToken: []
  responses:
    '200':
      description: Returns camera list.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CameraListResponse'
    '400':
      $ref: '#/components/responses/Error400InvalidParams'
    '401':
      $ref: '#/components/responses/Error401Unauthorized'
    '403':
      $ref: '#/components/responses/Error403PermissionDenied'

post:
  operationId: connect-cameras
  summary: Connect new camera
  tags:
    - camera
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - type
            - url
            - connection_type
          properties:
            name:
              type: string
              description: Camera name
            type:
              type: string
              enum:
                - h264
                - mjpeg
              description: >-
                Camera type. We currently support H.264 over RTSP and MJPEG over
                HTTP cameras.
            connection_type:
              type: string
              enum:
                - direct
                - arrow
              description: >
                How is the camera connected to Angelcam. The `direct` connection
                means that the camera stream is available on a public IP
                address. The `arrow` option can be used for connecting cameras
                that can be accessed via an Arrow client. Please note that
                cameras connected via an Arrow client use URL in a specific
                format. You will need to use the [stream
                detection](#tag/camera-stream-detection) endpoints to obtain the
                URL first.
            url:
              type: string
              format: url
              description: >
                Complete URL of a camera stream. H.264 cameras must use "rtsp"
                scheme, for MJPEG cameras it's allowed to use "http" and "https"
                schemes. The "https" scheme is valid only for cameras using the
                `direct` connection type.
          example:
            name: My brand new shiny camera
            type: h264
            connection_type: direct
            url: 'rtsp://username:password@175.36.248.73:554/live.sdp'
  security:
    - OAuth2:
        - camera_create
    - PersonalAccessToken: []
  responses:
    '201':
      description: Newly created camera object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CameraObject'
    '400':
      $ref: '#/components/responses/Error400InvalidBody'
    '401':
      $ref: '#/components/responses/Error401Unauthorized'
    '403':
      $ref: '#/components/responses/Error403PermissionDenied'
