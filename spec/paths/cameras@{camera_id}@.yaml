get:
  operationId: my-cameras-detail
  summary: Retrieve camera
  tags:
    - camera
  parameters:
    - $ref: '#/parameters/cameraId'
    - name: refresh_rate
      in: query
      type: number
      format: float
      minimum: 0
      required: false
      description: >-
        Set a maximum number of keyframes sent in MJPEG stream per second. For
        example if you want to have MJPEG stream with keyframe sent every 10
        seconds, post value 0.1.
    - name: max_width
      in: query
      type: integer
      minimum: 1
      required: false
      description: Maximum width of MJPEG stream and LIVE SNAPSHOT.
    - name: max_height
      in: query
      type: integer
      minimum: 1
      required: false
      description: Maximum height of MJPEG stream and LIVE SNAPSHOT.
  security:
    - OAuth2-accessCode:
        - camera_access
    - OAuth2-passwordGrant:
        - camera_access
  responses:
    '200':
      description: Camera object
      schema:
        $ref: '#/definitions/CameraObject'
    '400':
      $ref: '#/responses/Error400InvalidParams'
    '401':
      $ref: '#/responses/Error401Unauthorized'
    '403':
      $ref: '#/responses/Error403PermissionDenied'
    '404':
      $ref: '#/responses/Error404NotFound'
put:
  operationId: my-cameras-update
  summary: Update camera
  tags:
    - camera
  parameters:
    - $ref: '#/parameters/cameraId'
    - in: body
      name: camera
      schema:
        type: object
        title: camera
        properties:
          name:
            type: string
            description: Camera name
          type:
            type: string
            enum:
              - h264
              - mjpeg
            description: >-
              Camera type. We currently support H.264 over RTSP and MJPEG over
              HTTP cameras.
          url:
            type: string
            format: url
            description: >-
              Complete URL of a camera stream. H.264 cameras need to have "rtsp"
              scheme, for MJPEG cameras it's allowed to use "http" and "https"
              schemes.
        example:
          name: My updated shiny camera
          type: h264
          url: 'rtsp://username:password@175.36.248.73:554/live.sdp'
  security:
    - OAuth2-accessCode:
        - camera_manage
    - OAuth2-passwordGrant:
        - camera_manage
  responses:
    '200':
      description: Camera object
      schema:
        $ref: '#/definitions/CameraObject'
    '400':
      $ref: '#/responses/Error400InvalidParams'
    '401':
      $ref: '#/responses/Error401Unauthorized'
    '403':
      $ref: '#/responses/Error403PermissionDenied'
    '404':
      $ref: '#/responses/Error404NotFound'
delete:
  operationId: my-cameras-remove
  summary: Remove camera
  tags:
    - camera
  parameters:
    - $ref: '#/parameters/cameraId'
  security:
    - OAuth2-accessCode:
        - camera_delete
    - OAuth2-passwordGrant:
        - camera_delete
  responses:
    '204':
      description: No content
    '401':
      $ref: '#/responses/Error401Unauthorized'
    '403':
      $ref: '#/responses/Error403PermissionDenied'
    '404':
      $ref: '#/responses/Error404NotFound'
